parameters:
  name: ''
  vmImage: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: '${{ parameters.name }} native build'
    pool:
      vmImage: ${{ parameters.vmImage }}
    steps:
      - bash: |
          chmod +x ./build-native.sh
          ./build-native.sh Release
        displayName: build

      - task: PublishPipelineArtifact@1
        condition: and(succeeded(), eq( '${{ parameters.name }}', 'windows'))
        inputs:
          targetPath: 'bin/Release/Release/Native.dll'
          artifactsName: 'native-build-${{ parameters.name }}'

      - task: PublishPipelineArtifact@1
        condition: and(succeeded(), eq( '${{ parameters.name }}', 'linux'))
        inputs:
          targetPath: 'bin/Release/libNative.so'
          artifactsName: 'native-build-${{ parameters.name }}'

      - task: PublishPipelineArtifact@1
        condition: and(succeeded(), eq( '${{ parameters.name }}', 'mac'))
        inputs:
          targetPath: 'bin/Release/libNative.dylib'
          artifactsName: 'native-build-${{ parameters.name }}'
