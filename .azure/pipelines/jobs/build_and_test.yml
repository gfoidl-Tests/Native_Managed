parameters:
  name: ''
  vmImage: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: '${{ parameters.name }} build and test'
    pool:
      vmImage: ${{ parameters.vmImage }}
    strategy:
      matrix:
        debug-build:
          BUILD_CONFIG: Debug
        release-build:
          BUILD_CONFIG: Release
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          targetPath: './native-out'

      - bash: |
            cd native-out
            ls -la
            echo ""
            
            for artifact in ./NativeBuild.*; do
                echo "artifact: $artifact"
            
                for lib in $artifact/*; do
                        echo "    lib: $lib"
                        mv $lib ./
                done
            
                rm -rf $artifact
            done
            
            echo ""
            ls -la
        displayName: fix artifact locations

      - bash: |
          chmod u+x ./build.sh
          ./build.sh build
        displayName: build

      - bash: ./build.sh test
        displayName: test

      - bash: ./build.sh pack
        displayName: pack
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['BUILD_CONFIG'], 'Release'))

      - task: PublishTestResults@2
        inputs:
          testRunner: VSTest
          testResultsFiles: '**/*.trx'

      - task: PublishBuildArtifacts@1
        condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['BUILD_CONFIG'], 'Release'))
        inputs:
          pathtoPublish: 'NuGet-Packed'
          artifactName: 'NuGet-Packed'
